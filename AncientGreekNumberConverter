import math

def number_convert_switcher(arithmos):

    switcher = {
        1: 'α',
        2: 'β',
        3: 'γ',
        4: 'δ',
        5: 'ε',
        6: 'ϛ',
        7: 'ζ',
        8: 'η',
        9: 'θ',
        10: 'ι',
        20: 'κ',
        30: 'λ',
        40: 'μ',
        50: 'ν',
        60: 'ξ',
        70: 'ο', 
        80: 'π',
        90: 'Ϟ',
        100: 'ρ',
        200: 'σ',
        300: 'τ',
        400: 'υ',
        500: 'φ',
        600: 'χ',
        700: 'ψ',
        800: 'ω',
        900: 'ϡ',
        1000: '͵α',
        2000: '͵β',
        3000: '͵γ',
        4000: '͵δ',
        5000: '͵ε',
        6000: '͵ϛ',
        7000: '͵ζ',
        8000: '͵η',
        9000: '͵θ',
    }
    if type(arithmos) == str and arithmos != "":
        return list(switcher.keys())[list(switcher.values()).index(arithmos)]
    else:
        return switcher.get(arithmos, "")

def numberConvert_4(arithmos):
    if type(arithmos)==int:
        arithmosEnd=""
        for i in reversed(range(len(str(arithmos)))):

            arithmosStrNum=str(arithmos)
            zeros=""

            for j in range(i):

                zeros+="0"

            arithmosStr=arithmosStrNum[len(arithmosStrNum)-i-1]+zeros
            arithmosEnd+=number_convert_switcher(int(arithmosStr))
        if arithmos % 1000 == 0:

            return (arithmosEnd)
        else:
            return (arithmosEnd + "΄")
    else:
        arithmosEnd=0
        arithmosList = []
        arithmosList[:] = arithmos
        if arithmosList[0] == "͵":
            arithmosList.pop(0)
            arithmosList[0] = "͵" + arithmosList[0]
        if arithmosList[-1] == "΄":
            arithmosList.pop(-1)


        for i in range (len(arithmosList)):
            arithmosEnd+=number_convert_switcher(arithmosList[i])
        return arithmosEnd



def numberToList(number):
  a= math.ceil(len(str(number))/4)

  numberList = []
  numberString = str(number)
  j = len(numberString)
  h = len(numberString)-4
  for i in range(math.ceil(len(str(number))/4)):
    numberList.append(numberString[h:j])
    j = h
    h -=4
    if h<0:
      h=0
  return numberList



def numberConvertMoreThan4(number):
    if type(number)==int:
      numberList = numberToList(number)
      numberFinal = ''

      for i in range(len(numberList)):
        if i==0 and int(numberList[i]) != 0:
          numberFinal = '.' + numberConvert_4(int(numberList[0]))
        elif int(numberList[i]) != 0:
          numberFinal =' χαι '+ numberConvert_4(i) + 'Μ' + numberConvert_4(int(numberList[i])) + numberFinal
        
      if numberFinal[1]== 'χ':
        numberFinal = numberFinal[5:]

      if numberFinal[-1] == '΄':

        return numberFinal#.replace('΄', '')+'΄'
      else:
        return numberFinal#.replace('΄', '')
        
    else:

      numberFinal=0
      numberList=number.split('.')

      if len(numberList)==2:
        
        numberFinal+=numberConvert_4(numberList[1])
        numberList.pop(1)
      numberList1=numberList[0].split(' χαι ')

      for i in range(len(numberList1)):

        numberList2 = []
        numberList2 = numberList1[i].split('Μ')
        numberFinal += numberConvert_4(numberList2[1])*(10000**numberConvert_4(numberList2[0]))
      return numberFinal


def numberConvert(number):

    if len(str(number)) > 4:

      return numberConvertMoreThan4(number)

    else:

      return numberConvert_4(number)
      


def numberConv(number):

  if type(number) == float:

    numberFraction = list((number).as_integer_ratio())

    if numberConvert(numberFraction[0]) == 'α΄':
      return numberConvert(numberFraction[1]).replace('΄', '΄΄')

    else:
      return numberConvert(numberFraction[0]) +','+numberConvert(numberFraction[1]).replace('΄', '΄΄')

  elif type(number) == str and ',' in number:

   
      numberList=number.split(',')
      arithmitis = numberConvert(numberList[0])
      paronomastis = numberConvert(numberList[1].replace('΄', ''))

      apotelesma = arithmitis/paronomastis

      return apotelesma

  elif type(number) == str and number[-2]=='΄':

    return 1/numberConvert(number.replace('΄', ''))
      
  else:
    return numberConvert(number)




#EXAMPLES:


print(numberConv(1))  

#prints: α΄

print(numberConv('͵α'))  

#prints: 1000

print(numberConv(1234567))


print(numberConv('γ΄Μ͵βρπζ΄ χαι β΄Μχε΄ χαι α΄Μ͵ϛϡδ΄.͵αψϞζ΄'))      

#prints: 2187060569041797

print(numberConv(2187060569041797))   

#prints: γ΄Μ͵βρπζ΄ χαι β΄Μχε΄ χαι α΄Μ͵ϛϡδ΄.͵αψϞζ΄

print(numberConv(1.5))

#prints: γ΄,β΄΄

print(numberConv('β΄΄'))

#prints: 0.5
